{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GridGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","category","type","value","placeholder","onChange","target","GifGridItem","title","gif","className","src","alt","getGifs","a","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","url","useFetchGifs","loading","state","setState","useEffect","then","imgs","GridGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2KAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACC,sBAAMC,SARc,SAACC,GACrBA,EAAEC,iBACFN,GAAc,SAACO,GACd,MAAM,CAAEL,GAAR,mBAAuBK,QAKxB,SACC,uBACCC,KAAK,OACLC,MAAOP,EACPQ,YAAY,4BACZC,SAjBsB,SAACN,GACzBF,EAAcE,EAAEO,OAAOH,aCMVI,EAXY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACpC,OACC,qBAAIC,UAAU,2DAAd,UACC,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,8BACC,6BAAKA,U,uBCSMK,EAhBF,uCAAG,WAAOZ,GAAP,qBAAAa,EAAA,4DACA,mCADA,SAEGC,MAAM,gDAAD,OADR,mCACQ,cACsCd,EADtC,aAFR,cAETe,EAFS,gBAKQA,EAAIC,OALZ,uBAKPC,EALO,EAKPA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRd,MAAOa,EAAIb,MACXC,IAAKY,EAAIE,OAAOC,iBAAiBC,QAVpB,kBAaRN,GAbQ,4CAAH,sDCmBEO,EAfM,SAACzB,GACrB,MAA0BN,mBAAS,CAClCuB,KAAM,GACNS,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACTjB,EAAQZ,GAAU8B,MAAK,SAACC,GACvBH,EAAS,CAAEX,KAAMc,EAAML,SAAS,SAE/B,CAAC1B,IAEG2B,GCUOK,EApBC,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAClB,EAAkCyB,EAAazB,GAAjCsB,EAAd,EAAQL,KAAcS,EAAtB,EAAsBA,QAEtB,OACC,qCACEA,GAAW,wCAEZ,qBAAKjB,UAAU,iBAAf,SACEa,EAAOH,KAAI,YAAyB,IAAtBE,EAAqB,EAArBA,GAAId,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACzB,OAAO,cAAC,EAAD,CAAsBD,MAAOA,EAAOC,IAAKA,GAAvBa,YCMfY,EAhBM,WACpB,MAAoCvC,mBAAS,CAAC,gBAA9C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAEA,OACC,qCACC,sBAAKgB,UAAU,aAAf,UACC,wCACA,cAAC,EAAD,CAAahB,cAAeA,OAE5ByC,EAAWf,KAAI,SAACnB,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCTlBmC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.54debe97.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputValue = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetCategories((category) => {\r\n\t\t\treturn [inputValue, ...category];\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tplaceholder=\"press enter once you type\"\r\n\t\t\t\tonChange={handleInputValue}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, gif }) => {\r\n\treturn (\r\n\t\t<li className=\"animate__animated animate__bounces animate__bounceInDown\">\r\n\t\t\t<img src={gif} alt={title} />\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{title}</h3>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","const getGifs = async (category) => {\r\n\tconst apiKey = 'lDICKO8HcMY8he7RgTydb5h2sWPMbcAC';\r\n\tconst res = await fetch(\r\n\t\t`https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${category}&limit=2`\r\n\t);\r\n\tconst { data } = await res.json();\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\tgif: img.images.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\treturn gifs;\r\n};\r\n\r\nexport default getGifs;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\tsetState({ data: imgs, loading: false });\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GifGridItem from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GridGif = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <p>loading</p>}\r\n\t\t\t{/* <h3>{category}</h3> */}\r\n\t\t\t<div className=\"card-container\">\r\n\t\t\t\t{images.map(({ id, title, gif }) => {\r\n\t\t\t\t\treturn <GifGridItem key={id} title={title} gif={gif} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nGridGif.propTypes = {\r\n\tcategory: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GridGif;\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GridGif from './components/GridGif';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['Programming']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"search-box\">\r\n\t\t\t\t<h2>Search</h2>\r\n\t\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t</div>\r\n\t\t\t{categories.map((category) => (\r\n\t\t\t\t<GridGif key={category} category={category} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}